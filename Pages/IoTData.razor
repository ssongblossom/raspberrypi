@page "/iotdata"


<h1>IoT Data</h1>

<p>Current status : @isRunning</p>


<button class = "btn btn-primary" @onclick = "startOrStop">@status</button>



@for(int i=0; i<10; i++)
{
    <p>@strArr[i] : @dataArr[i] </p>
}


@code{
    static bool isRunning = false;
    static bool isOpen = false;
    string status; //START OR STOP
    SerialPort BSerialPort = new SerialPort("/dev/rfcomm0");
    string[] strArr = new string[] {"DHT11", "DHT22", "DM460", "DM2007", "CO", "Alcohol", "CO2", "Tolueno", "NH4", "Acetona"};
    string[] dataArr =new string[10];
    protected override async Task OnInitializedAsync()
    {
        BSerialPort.BaudRate = 9600;
        BSerialPort.DataReceived += new SerialDataReceivedEventHandler(DataReceivedHandler);
        System.Console.WriteLine("OnInitializedAsync");
    }
    private void openPort()
    {
        try
        {
            if (!BSerialPort.IsOpen)
            { 
                BSerialPort.Open(); //만약 포트가 열려있지 않다면 엽시다.
            }
        }
        catch (Exception ex)
        {
            System.Console.WriteLine(ex.Message);//예외일 때 보여주기
        }
    }
    private void startOrStop()
    {
        if(!BSerialPort.IsOpen)
            openPort();
        
        if(!isRunning)
        {
            status ="STOP";
            BSerialPort.Write("1");
            isRunning = true;
        }
        else
        {
            status = "START";
            BSerialPort.Write("2");
            isRunning = false;
        }
    }

    private void DataReceivedHandler(object sender, SerialDataReceivedEventArgs e)
        {
            try
            {
                SerialPort spl = (SerialPort)sender;
                string recievedData = spl.ReadLine();
                System.Console.WriteLine($"{recievedData}");
                //DataProcessor(recievedData);
            }
            catch (Exception ex)
            {
                System.Console.WriteLine("Fail to recieve the data\n\r");
            }
        }
    
    
    /*
    private void DataProcessor(string recievedData)
    {
        string result ="";
        string strData = recievedData.Substring(0,recievedData.Length-1);

        //받은 데이터가 어떤 센서의 데이터인지 구하기 
        int index = 0;
        for(int i=0; i<10; i++)
        {
            if(strData.Contains(strArr[i]))
            {
                index = i;
                break;
            }
        }

        //데이터를 ':'를 기준으로 split 0번째에는 센서이름, 1번째에는 센서 값
        string[] datas = strData.Split(':');
        datas[1].Replace(" ",""); // " " 제거
        
        //센서의 종류에 따라서 데이터 가공하기
        if(index ==0 || index ==1 )//dht11 or dht22
        {
            datas[1].Replace("(", ""); // "(" 제거
            datas[1].Replace(")", ""); // ")" 제거
            string[] subs = datas[1].Split(',');
            result = "TEMP: " + subs[0] + " HUMIDITY : " +subs[1];  
        }
        else
        {
            result = datas[1];
        }

        //결과값을 dataArr에 넣어주기
        dataArr[index] = result;
    }
    */
    




}